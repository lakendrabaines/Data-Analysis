SQL,Message,Duration (s)
"-- 1) No-show rate per provider SELECT p.first_name || ' ' || p.last_name AS provider,        ROUND(100.0 * SUM(CASE WHEN a.status='No-Show' THEN 1 ELSE 0 END) / COUNT(*), 1) AS no_show_pct FROM providers p JOIN appointments a ON a.provider_id = p.provider_id GROUP BY p.provider_id ORDER BY no_show_pct DESC;  -- 2) Average time between visits per patient (days) WITH enc AS (   SELECT patient_id, DATE(encounter_date) AS dt   FROM encounters   ORDER BY patient_id, dt ), diffs AS (   SELECT e2.patient_id,          CAST((JULIANDAY(e2.dt)-JULIANDAY(e1.dt)) AS INT) AS days_between   FROM enc e1   JOIN enc e2     ON e2.patient_id = e1.patient_id    AND e2.dt > e1.dt ) SELECT patient_id, AVG(days_between) AS avg_days_between FROM diffs GROUP BY patient_id ORDER BY avg_days_between DESC;  -- 3) Top diagnoses by patient count SELECT d.icd10, d.description, COUNT(*) AS patient_count FROM patient_diagnoses pd JOIN diagnoses d ON d.icd10 = pd.icd10 GROUP BY d.icd10, d.description ORDER BY patient_count DESC, d.icd10;  -- 4) A1C results outside recommended range (>7.0) SELECT e.patient_id, l.encounter_id, l.result_value AS a1c FROM labs l JOIN encounters e ON e.encounter_id = l.encounter_id WHERE l.test_name = 'A1C' AND l.result_value > 7.0 ORDER BY a1c DESC;  -- 5) Revenue metrics by department SELECT dep.department_name,        ROUND(SUM(c.amount_billed),2) AS billed,        ROUND(SUM(c.amount_paid),2) AS paid,        ROUND(100.0 * SUM(c.amount_paid) / NULLIF(SUM(c.amount_billed),0),1) AS collection_rate_pct FROM claims c JOIN departments dep ON dep.department_id = c.department_id GROUP BY dep.department_name ORDER BY paid DESC;  -- 6) Provider workload (via view) SELECT * FROM vw_provider_workload ORDER BY completed_visits DESC;  -- 7) Readmission pairs within 30 days SELECT * FROM vw_readmission_30d ORDER BY patient_id, index_dt;",no such table: providers,0.0